import tensorflow as tf

텐서 = tf.constant([3,4,5]) 
텐서2 = tf.constant([6,7,8]) 

print(텐서+텐서2)  


# 텐서란? - 그냥 int나 list같은 자료형인거임. 

# 텐서 자료형이 필요한 이유
# -행렬로 인풋/w값 저장이 가능
# -그럼 node값 계산식이 쉬워짐


텐서3 = tf.constant( [ [1,2],
                      [3,4] ] )

# 위와같이 쉼표를 찍으면 행렬의 상하처럼 배열가능.
# 위의 저 텐서는  
#  1,2 
#  3,4 
# 행렬과 같은거임   


# 텐서의 연산은 +, - , *, / 이런거 걍 써도되고
# tf.add(텐서1, 텐서2)   이런거 써도됨
# tf.subtract(), tf.divide(), tf.multiply() 등등
# tf.matmul()  -> 이건 행렬의 곱을 해줌

텐서4 = tf.zeros(10)
print(텐서4)
# 위처럼 쓰면 0만 10개 담긴 텐서를 만들어줌

텐서5 = tf.zeros( [2,2] )
# 위처럼 쓰면 0으로 찬 2*2 행렬을 만들어줌
print(텐서5)

텐서6 = tf.zeros( [2,2,3] )
# 이건 뒤에서부터 해석하면됨. 3개의 데이터를 만들어서 한줄 만들고
# 그걸 2개 만들어주고
# 그 쌍을 하나더 만들어준다는뜻임
print(텐서6)



#텐서의 shape 이란? - 그냥 몇차원의 데이터다...라는 걸 보여주는거임

print(텐서.shape) # 이렇게 하면 그냥 3이 출력됨. 데이터 그냥 3개 들어있다는 뜻이고
print(텐서3.shape) # 이렇게 하면 (2,2) 이렇게 출력됨. 2행 2열의 데이터라는뜻

# 딥러닝할때 shape가 중요함. 왜냐면 shape를 보고 이게 몇차원의 행렬이구나.. 이거를
# 알아야 데이터분석같은게 쉬워짐.

# shape 해석하는법
# - 뒤에서부터 해석함.
# 만약 (2,3) 라면 그냥 3개의 자료가 들어있는 리스트가 있는데 그게 2개있다는 뜻


# tensor의 datatype(자료형)

텐서 = tf.constant([3.0, 4, 5])  #이런식으로 값에 실수가 있으면 float 자료형이됨. 딥러닝할때 정수보단 거의 실수 많이 씀.

텐서 = tf.constant([3, 4, 5], tf.float32 ) #아니면 이런식으로 뒤에 원하는 자료형 써주면 그 자료형이 됨. 
                                        #또는 tf.cast()라는걸로 형변환 시킬 수도 있음. 필요하면 가져다가 쓰기 


"""
Variable 이란? :  weight 저장하고 싶을때는 Variable 쓰기  (weight는 Variabl로 만들어야함)
 
tf.constant()는 변하지 않는 고정된 상수 등의 값을 만들때 씀.

tf.Variable()은 변수를 만들 수 있음. 딥러닝에선 weight임. weight값들을 계산해서 저장하고 다시 값이 업데이트되고 하니까.

ex) w = tf. Variable(1.0)  // 이러면 첨에 1.0으로 초기화된 변수 w값을 하나 만든거임
print(w) 해보면 constant() 출력했을때와 비슷하게 나오는거 학인 가능
print( w.numpy() ) 해보면 변수값에 저장된 값 나옴. 여기선 1.0 일듯


w.assign(2)   //이렇게 해주면 w변수에 새로운 값 2로 업데이트해준거임.  변수 변경할땐 assign()쓰기

Variable에도 constant()에서 넣은것처럼 행렬값들도 넣을 수 있음.


"""


# 지금까지 배운 텐서 개념 외우기보단 그냥 참고만 해도됨. 이걸로 내가 직접 첨부터 끝까지 딥러닝 Neural network 구축을 할 순 있지만
# 굳이 그럴 필요없이 이미 만들어진 network 레이어 등을 통해 갖다쓰는 방식으로 대부분 딥러닝 프로젝트를 진행함 

